# -*- coding utf-8 -*-

"""
@author:yankerp
@url:www.yankerphub.com
"""

"""
面向对象是一种思想，而不是一种技术，它没有任何的一些代码语言，只是一个思维方式。这种思维方式可以应用在任何的编程语言当中, 俗话面向对象编程，不如说成基于面向对象思想的编程。
1、重点：面向对象是一种思想，一个想法，而不是一个技术，某一块代码。

在学习面向对象之前所采用的面向过程的方式就是一个流水线的方式，第一步做什么第二步做什么的方式，这样的代码非常的清晰而且很流畅，程序当中的组成部分就分为两点，一个是数据，一个是功能。当面向过程的编写
代码的方式逐渐增多的时候，数据和功能非常杂乱，没有管理，扩展性差。 这个时候面向对象的编程思维就开展了。
2、学习面向对象的思维编程是为了解决面向过程流水线的一些问题，这些问题通常是扩展性差，阅读性差，代码重复率极高。

面向过程的核心二字是过程，那么面向对象的核心二字就是对象二字。 那么什么是对象。

对象：对象就是能够把数据和功能整合到一起的一个容器，这个容器叫做对象。 先不管这个容器是什么， 核心就是一个地方有数据还有功能，这个地方就称为对象。 在列表当中可以存放数据和功能，这里的功能可以用
函数表示。 那么列表当中存在函数和数据，这个列表就可以称为对象。 字典当中只要存在数据和函数，那么这个字典就是对象。 元组内存在数据和函数，那么这个元组就是对象。文件包中存在数据和函数，那么这个文件
就是对象。

在编写程序的时候有很多的功能，都需要处理数据，那么将某个功能和它要处理的数据放在一个容器当中，这个容器就是对象。 这个就是对象的意思。
"""

# 1、将某个功能和它要处理的数据放在一个容器当中，这个容器就是对象
# 方式一：如下：
"""
name = 'yanzan'
age = 20

def output():
    print(f'我的名字是{name},我的年龄是{age}')

obj_list = [name, age, output]  # 此时的obj_list就是一个盛放了功能和数据的一个容器，这个容器就可以称为对象。
"""

# 方式二：如下：
"""
name = "yanzan"
age = 20

def out_put(name, age):
    print('my name is {name}, my age is {age}')

info = {   #  # 此时的info就是一个盛放了功能和数据的一个容器，这个容器就可以称为对象。
    'name' : 'yanzan',
    'age' : 20,
    out_put
}
"""

"""
当然还有很多个方式来实现在一个容器当中能够同时存放数据和功能。
重点：学习面向对象必须还要了解类的概念，类就是一个分类的意思，专门对-对象相同的数据和相同的功能进行分类。在回顾一下，对象就是存放数据和功能的容器，类是对多种容器当中相同的数据和功能做了抽离，形成
共享的方式
"""


''' 垃圾写法：
def out_put(student1):
    print(f"my name is {student1['name']}, my age is {student1['age']}, my welcome to {student1['school']}")

student1 = {
    'school' : 'BeiJing清华',
    'name' : 'zhangsan',
    'age' : 20,
    'gongneng' : out_put
}


student2 = {
    'school' : 'BeiJing清华',
    'name' : 'lili',
    'age' : 16,
    'gongneng' : out_put
}

out_put(student1)
out_put(student2)

'''











